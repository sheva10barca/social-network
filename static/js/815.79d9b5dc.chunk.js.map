{"version":3,"file":"static/js/815.79d9b5dc.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","webpack://social-network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social-network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social-network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n   let [editMode, setEditMode] = useState(false);\r\n   let [status, setStatus] = useState(props.status);\r\n\r\n   useEffect(() => {\r\n      setStatus(props.status);\r\n   }, [props.status]);\r\n\r\n   const activateEditMode = () => {\r\n      setEditMode(true);\r\n   };\r\n\r\n   const deactivateEditMode = () => {\r\n      setEditMode(false);\r\n      props.updateStatus(status);\r\n   };\r\n\r\n   const onStatusChange = (e) => {\r\n      setStatus(e.currentTarget.value);\r\n   };\r\n\r\n   return (\r\n      <div>\r\n         {!editMode && (\r\n            <div>\r\n               <span onDoubleClick={activateEditMode}>{props.status || \"-------\"}</span>\r\n            </div>\r\n         )}\r\n         {editMode && (\r\n            <div>\r\n               <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n            </div>\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__BFjAA\",\"content\":\"ProfileInfo_content__2tkm9\"};","import ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n   if (!profile) {\r\n      return <Preloader />;\r\n   }\r\n   return (\r\n      <div>\r\n         <div className={s.content}></div>\r\n         <div className={s.descriptionBlock}>\r\n            <p>{profile.fullName}</p>\r\n            <img src={profile.photos.large} alt=\"\" />\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            <p>{profile.aboutMe}</p>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__ksKYm\",\"posts\":\"MyPosts_posts__nkwc2\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__rCsVu\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n   return (\r\n      <div className={s.item}>\r\n         <img src=\"https://upload.wikimedia.org/wikipedia/en/thumb/4/47/FC_Barcelona_%28crest%29.svg/1200px-FC_Barcelona_%28crest%29.svg.png\" alt=\"\"/>\r\n         {props.message}\r\n         <div>\r\n            <span>likes</span> {props.likesCount}\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"} validate={[required, maxLength10]} />\r\n         </div>\r\n         <div>\r\n            <button>Add post</button>\r\n         </div>\r\n      </form>\r\n   );\r\n};\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n   let postsElements = props.posts.map((post, i) => <Post message={post.message} likesCount={post.likesCount} key={i} />);\r\n\r\n   let onAddPost = (values) => {\r\n      props.addPost(values.newPostText);\r\n   };\r\n\r\n   return (\r\n      <div className={s.postsBlock}>\r\n         <h3>My posts</h3>\r\n         <AddNewPostFormRedux onSubmit={onAddPost} />\r\n         <div className={s.posts}>{postsElements}</div>\r\n      </div>\r\n   );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      posts: state.profilePage.posts,\r\n      newPostText: state.profilePage.newPostText,\r\n   };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addPost: (newPostText) => {\r\n         dispatch(addPostActionCreator(newPostText));\r\n      },\r\n   };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n   return (\r\n      <div>\r\n         <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n         <MyPostsContainer />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, getStatus, updateStatus } from \"../../redux/profile-reducer\";\r\nimport { useLocation, useNavigate, useParams, Navigate } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n   componentDidMount() {\r\n      let userId = this.props.router.params.userId;\r\n      if (!userId) {\r\n         userId = this.props.authorizedUserId;\r\n         if (!userId) {\r\n            <Navigate to={\"/login\"} />;\r\n         }\r\n      }\r\n      this.props.getUserProfile(userId);\r\n      this.props.getStatus(userId);\r\n   }\r\n\r\n   render() {\r\n      return <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />;\r\n   }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n   //console.log('mapStateToProps PROFILE')\r\n   return {\r\n      profile: state.profilePage.profile,\r\n      status: state.profilePage.status,\r\n      authorizedUserId: state.auth.userId,\r\n      isAuth: state.auth.isAuth,\r\n   };\r\n};\r\n\r\nfunction withRouter(Component) {\r\n   function ComponentWithRouterProp(props) {\r\n      let location = useLocation();\r\n      let navigate = useNavigate();\r\n      let params = useParams();\r\n      return <Component {...props} router={{ location, navigate, params }} />;\r\n   }\r\n   return ComponentWithRouterProp;\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }), withRouter)(ProfileContainer);\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","className","s","fullName","src","photos","large","alt","aboutMe","Preloader","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","React","postsElements","posts","map","post","i","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userId","this","router","params","authorizedUserId","getUserProfile","getStatus","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams"],"sourceRoot":""}