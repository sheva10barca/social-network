{"version":3,"file":"static/js/79.53eaf54e.chunk.js","mappings":"yLACA,GAAgB,QAAU,yBAAyB,WAAa,4BAA4B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,mBCY7M,EATmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,iBAAKC,UAAWC,EAAAA,WAAa,WAChC,gBAAKD,UAAWC,EAAAA,OAAS,UAAC,gBAAKC,IAAI,yHAAyHC,IAAI,QAChK,SAAC,KAAO,CAACC,GAAIN,EAAK,SAAED,EAAMQ,SAElC,ECJA,EAJgB,SAACR,GACb,OAAO,gBAAKG,UAAWC,EAAAA,OAAS,SAAEJ,EAAMS,SAC5C,E,uCCDMC,GAAcC,EAAAA,EAAAA,GAAiB,IAcrC,GAAeC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,2BAAjC,EAZuB,SAACb,GACrB,OACG,kBAAMc,SAAUd,EAAMe,aAAa,WAChC,0BACG,SAACC,EAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,EAAUV,GAAcW,YAAY,qBAAqBb,KAAK,sBAExG,0BACG,4CAIZ,ICWA,EArBgB,SAACR,GACd,IAAIsB,EAAQtB,EAAMuB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,EAAQC,GAAC,OAAK,SAAC,EAAU,CAACpB,KAAMmB,EAAOnB,KAAMN,GAAIyB,EAAOzB,IAASyB,EAAOzB,GAAM,IACnH2B,EAAmBP,EAAMQ,SAASJ,KAAI,SAACjB,EAASmB,GAAC,OAAK,SAAC,EAAO,CAACnB,QAASA,EAAQA,SAAcA,EAAQP,GAAM,IAMhH,OACG,iBAAKC,UAAWC,EAAAA,QAAU,WACvB,gBAAKD,UAAWC,EAAAA,aAAe,SAAEoB,KACjC,gBAAKrB,UAAWC,EAAAA,SAAW,UACxB,yBAAMyB,OAET,SAAC,EAAc,CAACf,SAVF,SAACiB,GAClB/B,EAAMgC,YAAYD,EAAOE,eAC5B,MAWH,E,oECtBIC,EAA6B,SAACZ,GAAK,MAAM,CAC1Ca,OAAQb,EAAMc,KAAKD,OACrB,ECcD,GAAeE,E,QAAAA,KAAQC,EAAAA,EAAAA,KAdD,SAAChB,GACpB,MAAO,CACJC,YAAaD,EAAMC,YAEzB,IAEyB,SAACgB,GACvB,MAAO,CACJP,YAAa,SAACC,GACXM,GAASC,EAAAA,EAAAA,GAAmBP,GAC/B,EAEN,KDVgC,SAACQ,GAAe,IACvCC,EAAiB,qGAKnB,OALmB,8BACpB,WACG,OAAKC,KAAK3C,MAAMmC,QAET,SAACM,GAAS,UAAKE,KAAK3C,SAFI,SAAC,KAAQ,CAACO,GAAG,UAG/C,KAAC,EALmB,CAASqC,EAAAA,WAUhC,OAFqCN,EAAAA,EAAAA,IAAQJ,EAARI,CAAoCI,EAG5E,GCAA,CAAuFG,E","sources":["webpack://social-network/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__CurfY\",\"dialogItem\":\"Dialogs_dialogItem__rbsEB\",\"avatar\":\"Dialogs_avatar__u-4nC\",\"active\":\"Dialogs_active__Yhuz3\",\"messages\":\"Dialogs_messages__HXHr3\",\"message\":\"Dialogs_message__uSuuC\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialogItem}>\r\n        <div className={s.avatar}><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/2048px-Circle-icons-profile.svg.png\" alt=''/></div>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field component={Textarea} validate={[required, maxLength50]} placeholder=\"Enter your message\" name=\"newMessageBody\" />\r\n         </div>\r\n         <div>\r\n            <button>Send322</button>\r\n         </div>\r\n      </form>\r\n   );\r\n};\r\nexport default reduxForm({ form: \"dialog-add-message-form\" })(AddMessageForm);\r\n","import React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nimport s from \"./Dialogs.module.css\";\r\n\r\nconst Dialogs = (props) => {\r\n   let state = props.dialogsPage;\r\n\r\n   let dialogsElements = state.dialogs.map((dialog, i) => <DialogItem name={dialog.name} id={dialog.id} key={dialog.id} />);\r\n   let messagesElements = state.messages.map((message, i) => <Message message={message.message} key={message.id} />);\r\n\r\n   let addNewMessage = (values) => {\r\n      props.sendMessage(values.newMessageBody);\r\n   };\r\n\r\n   return (\r\n      <div className={s.dialogs}>\r\n         <div className={s.dialogsItems}>{dialogsElements}</div>\r\n         <div className={s.messages}>\r\n            <div>{messagesElements}</div>\r\n         </div>\r\n         <AddMessageForm onSubmit={addNewMessage} />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Navigate to=\"/login\" />;\r\n\r\n         return <Component {...this.props} />;\r\n      }\r\n   }\r\n\r\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n   return ConnectedAuthRedirectComponent;\r\n};\r\n","import { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      dialogsPage: state.dialogsPage,\r\n   };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      sendMessage: (newMessageBody) => {\r\n         dispatch(sendMessageCreator(newMessageBody));\r\n      },\r\n   };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);\r\n"],"names":["props","path","id","className","s","src","alt","to","name","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","dialog","i","messagesElements","messages","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}